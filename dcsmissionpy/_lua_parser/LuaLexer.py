# Generated from Lua.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,68,586,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,
        71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,1,
        0,1,0,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,4,1,
        4,1,4,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,
        7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,10,1,10,1,10,1,10,
        1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,
        1,13,1,13,1,13,1,13,1,14,1,14,1,15,1,15,1,15,1,16,1,16,1,16,1,16,
        1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,
        1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,
        1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,23,1,23,1,24,1,24,1,25,
        1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,
        1,27,1,28,1,28,1,28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,32,
        1,33,1,33,1,34,1,34,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,37,1,37,
        1,37,1,38,1,38,1,38,1,39,1,39,1,39,1,40,1,40,1,40,1,41,1,41,1,41,
        1,42,1,42,1,43,1,43,1,44,1,44,1,45,1,45,1,46,1,46,1,47,1,47,1,47,
        1,48,1,48,1,49,1,49,1,50,1,50,1,51,1,51,1,51,1,52,1,52,1,52,1,53,
        1,53,1,53,1,53,1,54,1,54,1,55,1,55,1,56,1,56,5,56,358,8,56,10,56,
        12,56,361,9,56,1,57,1,57,1,57,5,57,366,8,57,10,57,12,57,369,9,57,
        1,57,1,57,1,58,1,58,1,58,5,58,376,8,58,10,58,12,58,379,9,58,1,58,
        1,58,1,59,1,59,1,59,1,59,1,60,1,60,1,60,1,60,1,60,1,60,5,60,393,
        8,60,10,60,12,60,396,9,60,1,60,3,60,399,8,60,1,61,4,61,402,8,61,
        11,61,12,61,403,1,62,1,62,1,62,4,62,409,8,62,11,62,12,62,410,1,63,
        4,63,414,8,63,11,63,12,63,415,1,63,1,63,5,63,420,8,63,10,63,12,63,
        423,9,63,1,63,3,63,426,8,63,1,63,1,63,4,63,430,8,63,11,63,12,63,
        431,1,63,3,63,435,8,63,1,63,4,63,438,8,63,11,63,12,63,439,1,63,1,
        63,3,63,444,8,63,1,64,1,64,1,64,4,64,449,8,64,11,64,12,64,450,1,
        64,1,64,5,64,455,8,64,10,64,12,64,458,9,64,1,64,3,64,461,8,64,1,
        64,1,64,1,64,1,64,4,64,467,8,64,11,64,12,64,468,1,64,3,64,472,8,
        64,1,64,1,64,1,64,4,64,477,8,64,11,64,12,64,478,1,64,1,64,3,64,483,
        8,64,1,65,1,65,3,65,487,8,65,1,65,4,65,490,8,65,11,65,12,65,491,
        1,66,1,66,3,66,496,8,66,1,66,4,66,499,8,66,11,66,12,66,500,1,67,
        1,67,1,67,1,67,3,67,507,8,67,1,67,1,67,1,67,1,67,3,67,513,8,67,1,
        68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,3,68,526,8,
        68,1,69,1,69,1,69,1,69,1,69,1,70,1,70,1,70,1,70,1,70,4,70,538,8,
        70,11,70,12,70,539,1,70,1,70,1,71,1,71,1,72,1,72,1,73,1,73,1,74,
        1,74,1,74,1,74,1,74,1,74,1,74,1,74,1,74,1,75,1,75,1,75,1,75,5,75,
        563,8,75,10,75,12,75,566,9,75,1,75,1,75,1,76,4,76,571,8,76,11,76,
        12,76,572,1,76,1,76,1,77,1,77,1,77,5,77,580,8,77,10,77,12,77,583,
        9,77,1,77,1,77,1,394,0,78,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,
        9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,
        20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,
        31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,
        42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,
        105,53,107,54,109,55,111,56,113,57,115,58,117,59,119,60,121,0,123,
        61,125,62,127,63,129,64,131,0,133,0,135,0,137,0,139,0,141,0,143,
        0,145,0,147,0,149,65,151,66,153,67,155,68,1,0,14,3,0,65,90,95,95,
        97,122,4,0,48,57,65,90,95,95,97,122,2,0,34,34,92,92,2,0,39,39,92,
        92,2,0,88,88,120,120,2,0,69,69,101,101,2,0,43,43,45,45,2,0,80,80,
        112,112,11,0,34,36,39,39,92,92,97,98,102,102,110,110,114,114,116,
        116,118,118,122,122,124,124,1,0,48,50,1,0,48,57,3,0,48,57,65,70,
        97,102,4,0,10,10,13,13,133,133,8232,8233,3,0,9,10,12,13,32,32,615,
        0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,
        1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,
        1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,
        1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,
        1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,
        1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,
        1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,
        1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,
        1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,
        1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,
        1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,
        0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,
        0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,
        149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,1,157,1,0,
        0,0,3,159,1,0,0,0,5,161,1,0,0,0,7,167,1,0,0,0,9,172,1,0,0,0,11,175,
        1,0,0,0,13,179,1,0,0,0,15,185,1,0,0,0,17,192,1,0,0,0,19,198,1,0,
        0,0,21,201,1,0,0,0,23,206,1,0,0,0,25,213,1,0,0,0,27,218,1,0,0,0,
        29,222,1,0,0,0,31,224,1,0,0,0,33,227,1,0,0,0,35,236,1,0,0,0,37,242,
        1,0,0,0,39,244,1,0,0,0,41,246,1,0,0,0,43,253,1,0,0,0,45,262,1,0,
        0,0,47,265,1,0,0,0,49,267,1,0,0,0,51,269,1,0,0,0,53,273,1,0,0,0,
        55,279,1,0,0,0,57,284,1,0,0,0,59,288,1,0,0,0,61,290,1,0,0,0,63,292,
        1,0,0,0,65,294,1,0,0,0,67,296,1,0,0,0,69,298,1,0,0,0,71,300,1,0,
        0,0,73,303,1,0,0,0,75,307,1,0,0,0,77,310,1,0,0,0,79,313,1,0,0,0,
        81,316,1,0,0,0,83,319,1,0,0,0,85,322,1,0,0,0,87,324,1,0,0,0,89,326,
        1,0,0,0,91,328,1,0,0,0,93,330,1,0,0,0,95,332,1,0,0,0,97,335,1,0,
        0,0,99,337,1,0,0,0,101,339,1,0,0,0,103,341,1,0,0,0,105,344,1,0,0,
        0,107,347,1,0,0,0,109,351,1,0,0,0,111,353,1,0,0,0,113,355,1,0,0,
        0,115,362,1,0,0,0,117,372,1,0,0,0,119,382,1,0,0,0,121,398,1,0,0,
        0,123,401,1,0,0,0,125,405,1,0,0,0,127,443,1,0,0,0,129,482,1,0,0,
        0,131,484,1,0,0,0,133,493,1,0,0,0,135,512,1,0,0,0,137,525,1,0,0,
        0,139,527,1,0,0,0,141,532,1,0,0,0,143,543,1,0,0,0,145,545,1,0,0,
        0,147,547,1,0,0,0,149,549,1,0,0,0,151,558,1,0,0,0,153,570,1,0,0,
        0,155,576,1,0,0,0,157,158,5,59,0,0,158,2,1,0,0,0,159,160,5,61,0,
        0,160,4,1,0,0,0,161,162,5,98,0,0,162,163,5,114,0,0,163,164,5,101,
        0,0,164,165,5,97,0,0,165,166,5,107,0,0,166,6,1,0,0,0,167,168,5,103,
        0,0,168,169,5,111,0,0,169,170,5,116,0,0,170,171,5,111,0,0,171,8,
        1,0,0,0,172,173,5,100,0,0,173,174,5,111,0,0,174,10,1,0,0,0,175,176,
        5,101,0,0,176,177,5,110,0,0,177,178,5,100,0,0,178,12,1,0,0,0,179,
        180,5,119,0,0,180,181,5,104,0,0,181,182,5,105,0,0,182,183,5,108,
        0,0,183,184,5,101,0,0,184,14,1,0,0,0,185,186,5,114,0,0,186,187,5,
        101,0,0,187,188,5,112,0,0,188,189,5,101,0,0,189,190,5,97,0,0,190,
        191,5,116,0,0,191,16,1,0,0,0,192,193,5,117,0,0,193,194,5,110,0,0,
        194,195,5,116,0,0,195,196,5,105,0,0,196,197,5,108,0,0,197,18,1,0,
        0,0,198,199,5,105,0,0,199,200,5,102,0,0,200,20,1,0,0,0,201,202,5,
        116,0,0,202,203,5,104,0,0,203,204,5,101,0,0,204,205,5,110,0,0,205,
        22,1,0,0,0,206,207,5,101,0,0,207,208,5,108,0,0,208,209,5,115,0,0,
        209,210,5,101,0,0,210,211,5,105,0,0,211,212,5,102,0,0,212,24,1,0,
        0,0,213,214,5,101,0,0,214,215,5,108,0,0,215,216,5,115,0,0,216,217,
        5,101,0,0,217,26,1,0,0,0,218,219,5,102,0,0,219,220,5,111,0,0,220,
        221,5,114,0,0,221,28,1,0,0,0,222,223,5,44,0,0,223,30,1,0,0,0,224,
        225,5,105,0,0,225,226,5,110,0,0,226,32,1,0,0,0,227,228,5,102,0,0,
        228,229,5,117,0,0,229,230,5,110,0,0,230,231,5,99,0,0,231,232,5,116,
        0,0,232,233,5,105,0,0,233,234,5,111,0,0,234,235,5,110,0,0,235,34,
        1,0,0,0,236,237,5,108,0,0,237,238,5,111,0,0,238,239,5,99,0,0,239,
        240,5,97,0,0,240,241,5,108,0,0,241,36,1,0,0,0,242,243,5,60,0,0,243,
        38,1,0,0,0,244,245,5,62,0,0,245,40,1,0,0,0,246,247,5,114,0,0,247,
        248,5,101,0,0,248,249,5,116,0,0,249,250,5,117,0,0,250,251,5,114,
        0,0,251,252,5,110,0,0,252,42,1,0,0,0,253,254,5,99,0,0,254,255,5,
        111,0,0,255,256,5,110,0,0,256,257,5,116,0,0,257,258,5,105,0,0,258,
        259,5,110,0,0,259,260,5,117,0,0,260,261,5,101,0,0,261,44,1,0,0,0,
        262,263,5,58,0,0,263,264,5,58,0,0,264,46,1,0,0,0,265,266,5,46,0,
        0,266,48,1,0,0,0,267,268,5,58,0,0,268,50,1,0,0,0,269,270,5,110,0,
        0,270,271,5,105,0,0,271,272,5,108,0,0,272,52,1,0,0,0,273,274,5,102,
        0,0,274,275,5,97,0,0,275,276,5,108,0,0,276,277,5,115,0,0,277,278,
        5,101,0,0,278,54,1,0,0,0,279,280,5,116,0,0,280,281,5,114,0,0,281,
        282,5,117,0,0,282,283,5,101,0,0,283,56,1,0,0,0,284,285,5,46,0,0,
        285,286,5,46,0,0,286,287,5,46,0,0,287,58,1,0,0,0,288,289,5,40,0,
        0,289,60,1,0,0,0,290,291,5,41,0,0,291,62,1,0,0,0,292,293,5,91,0,
        0,293,64,1,0,0,0,294,295,5,93,0,0,295,66,1,0,0,0,296,297,5,123,0,
        0,297,68,1,0,0,0,298,299,5,125,0,0,299,70,1,0,0,0,300,301,5,111,
        0,0,301,302,5,114,0,0,302,72,1,0,0,0,303,304,5,97,0,0,304,305,5,
        110,0,0,305,306,5,100,0,0,306,74,1,0,0,0,307,308,5,60,0,0,308,309,
        5,61,0,0,309,76,1,0,0,0,310,311,5,62,0,0,311,312,5,61,0,0,312,78,
        1,0,0,0,313,314,5,126,0,0,314,315,5,61,0,0,315,80,1,0,0,0,316,317,
        5,61,0,0,317,318,5,61,0,0,318,82,1,0,0,0,319,320,5,46,0,0,320,321,
        5,46,0,0,321,84,1,0,0,0,322,323,5,43,0,0,323,86,1,0,0,0,324,325,
        5,45,0,0,325,88,1,0,0,0,326,327,5,42,0,0,327,90,1,0,0,0,328,329,
        5,47,0,0,329,92,1,0,0,0,330,331,5,37,0,0,331,94,1,0,0,0,332,333,
        5,47,0,0,333,334,5,47,0,0,334,96,1,0,0,0,335,336,5,38,0,0,336,98,
        1,0,0,0,337,338,5,124,0,0,338,100,1,0,0,0,339,340,5,126,0,0,340,
        102,1,0,0,0,341,342,5,60,0,0,342,343,5,60,0,0,343,104,1,0,0,0,344,
        345,5,62,0,0,345,346,5,62,0,0,346,106,1,0,0,0,347,348,5,110,0,0,
        348,349,5,111,0,0,349,350,5,116,0,0,350,108,1,0,0,0,351,352,5,35,
        0,0,352,110,1,0,0,0,353,354,5,94,0,0,354,112,1,0,0,0,355,359,7,0,
        0,0,356,358,7,1,0,0,357,356,1,0,0,0,358,361,1,0,0,0,359,357,1,0,
        0,0,359,360,1,0,0,0,360,114,1,0,0,0,361,359,1,0,0,0,362,367,5,34,
        0,0,363,366,3,135,67,0,364,366,8,2,0,0,365,363,1,0,0,0,365,364,1,
        0,0,0,366,369,1,0,0,0,367,365,1,0,0,0,367,368,1,0,0,0,368,370,1,
        0,0,0,369,367,1,0,0,0,370,371,5,34,0,0,371,116,1,0,0,0,372,377,5,
        39,0,0,373,376,3,135,67,0,374,376,8,3,0,0,375,373,1,0,0,0,375,374,
        1,0,0,0,376,379,1,0,0,0,377,375,1,0,0,0,377,378,1,0,0,0,378,380,
        1,0,0,0,379,377,1,0,0,0,380,381,5,39,0,0,381,118,1,0,0,0,382,383,
        5,91,0,0,383,384,3,121,60,0,384,385,5,93,0,0,385,120,1,0,0,0,386,
        387,5,61,0,0,387,388,3,121,60,0,388,389,5,61,0,0,389,399,1,0,0,0,
        390,394,5,91,0,0,391,393,9,0,0,0,392,391,1,0,0,0,393,396,1,0,0,0,
        394,395,1,0,0,0,394,392,1,0,0,0,395,397,1,0,0,0,396,394,1,0,0,0,
        397,399,5,93,0,0,398,386,1,0,0,0,398,390,1,0,0,0,399,122,1,0,0,0,
        400,402,3,143,71,0,401,400,1,0,0,0,402,403,1,0,0,0,403,401,1,0,0,
        0,403,404,1,0,0,0,404,124,1,0,0,0,405,406,5,48,0,0,406,408,7,4,0,
        0,407,409,3,145,72,0,408,407,1,0,0,0,409,410,1,0,0,0,410,408,1,0,
        0,0,410,411,1,0,0,0,411,126,1,0,0,0,412,414,3,143,71,0,413,412,1,
        0,0,0,414,415,1,0,0,0,415,413,1,0,0,0,415,416,1,0,0,0,416,417,1,
        0,0,0,417,421,5,46,0,0,418,420,3,143,71,0,419,418,1,0,0,0,420,423,
        1,0,0,0,421,419,1,0,0,0,421,422,1,0,0,0,422,425,1,0,0,0,423,421,
        1,0,0,0,424,426,3,131,65,0,425,424,1,0,0,0,425,426,1,0,0,0,426,444,
        1,0,0,0,427,429,5,46,0,0,428,430,3,143,71,0,429,428,1,0,0,0,430,
        431,1,0,0,0,431,429,1,0,0,0,431,432,1,0,0,0,432,434,1,0,0,0,433,
        435,3,131,65,0,434,433,1,0,0,0,434,435,1,0,0,0,435,444,1,0,0,0,436,
        438,3,143,71,0,437,436,1,0,0,0,438,439,1,0,0,0,439,437,1,0,0,0,439,
        440,1,0,0,0,440,441,1,0,0,0,441,442,3,131,65,0,442,444,1,0,0,0,443,
        413,1,0,0,0,443,427,1,0,0,0,443,437,1,0,0,0,444,128,1,0,0,0,445,
        446,5,48,0,0,446,448,7,4,0,0,447,449,3,145,72,0,448,447,1,0,0,0,
        449,450,1,0,0,0,450,448,1,0,0,0,450,451,1,0,0,0,451,452,1,0,0,0,
        452,456,5,46,0,0,453,455,3,145,72,0,454,453,1,0,0,0,455,458,1,0,
        0,0,456,454,1,0,0,0,456,457,1,0,0,0,457,460,1,0,0,0,458,456,1,0,
        0,0,459,461,3,133,66,0,460,459,1,0,0,0,460,461,1,0,0,0,461,483,1,
        0,0,0,462,463,5,48,0,0,463,464,7,4,0,0,464,466,5,46,0,0,465,467,
        3,145,72,0,466,465,1,0,0,0,467,468,1,0,0,0,468,466,1,0,0,0,468,469,
        1,0,0,0,469,471,1,0,0,0,470,472,3,133,66,0,471,470,1,0,0,0,471,472,
        1,0,0,0,472,483,1,0,0,0,473,474,5,48,0,0,474,476,7,4,0,0,475,477,
        3,145,72,0,476,475,1,0,0,0,477,478,1,0,0,0,478,476,1,0,0,0,478,479,
        1,0,0,0,479,480,1,0,0,0,480,481,3,133,66,0,481,483,1,0,0,0,482,445,
        1,0,0,0,482,462,1,0,0,0,482,473,1,0,0,0,483,130,1,0,0,0,484,486,
        7,5,0,0,485,487,7,6,0,0,486,485,1,0,0,0,486,487,1,0,0,0,487,489,
        1,0,0,0,488,490,3,143,71,0,489,488,1,0,0,0,490,491,1,0,0,0,491,489,
        1,0,0,0,491,492,1,0,0,0,492,132,1,0,0,0,493,495,7,7,0,0,494,496,
        7,6,0,0,495,494,1,0,0,0,495,496,1,0,0,0,496,498,1,0,0,0,497,499,
        3,143,71,0,498,497,1,0,0,0,499,500,1,0,0,0,500,498,1,0,0,0,500,501,
        1,0,0,0,501,134,1,0,0,0,502,503,5,92,0,0,503,513,7,8,0,0,504,506,
        5,92,0,0,505,507,5,13,0,0,506,505,1,0,0,0,506,507,1,0,0,0,507,508,
        1,0,0,0,508,513,5,10,0,0,509,513,3,137,68,0,510,513,3,139,69,0,511,
        513,3,141,70,0,512,502,1,0,0,0,512,504,1,0,0,0,512,509,1,0,0,0,512,
        510,1,0,0,0,512,511,1,0,0,0,513,136,1,0,0,0,514,515,5,92,0,0,515,
        526,3,143,71,0,516,517,5,92,0,0,517,518,3,143,71,0,518,519,3,143,
        71,0,519,526,1,0,0,0,520,521,5,92,0,0,521,522,7,9,0,0,522,523,3,
        143,71,0,523,524,3,143,71,0,524,526,1,0,0,0,525,514,1,0,0,0,525,
        516,1,0,0,0,525,520,1,0,0,0,526,138,1,0,0,0,527,528,5,92,0,0,528,
        529,5,120,0,0,529,530,3,145,72,0,530,531,3,145,72,0,531,140,1,0,
        0,0,532,533,5,92,0,0,533,534,5,117,0,0,534,535,5,123,0,0,535,537,
        1,0,0,0,536,538,3,145,72,0,537,536,1,0,0,0,538,539,1,0,0,0,539,537,
        1,0,0,0,539,540,1,0,0,0,540,541,1,0,0,0,541,542,5,125,0,0,542,142,
        1,0,0,0,543,544,7,10,0,0,544,144,1,0,0,0,545,546,7,11,0,0,546,146,
        1,0,0,0,547,548,8,12,0,0,548,148,1,0,0,0,549,550,5,45,0,0,550,551,
        5,45,0,0,551,552,5,91,0,0,552,553,1,0,0,0,553,554,3,121,60,0,554,
        555,5,93,0,0,555,556,1,0,0,0,556,557,6,74,0,0,557,150,1,0,0,0,558,
        559,5,45,0,0,559,560,5,45,0,0,560,564,1,0,0,0,561,563,3,147,73,0,
        562,561,1,0,0,0,563,566,1,0,0,0,564,562,1,0,0,0,564,565,1,0,0,0,
        565,567,1,0,0,0,566,564,1,0,0,0,567,568,6,75,0,0,568,152,1,0,0,0,
        569,571,7,13,0,0,570,569,1,0,0,0,571,572,1,0,0,0,572,570,1,0,0,0,
        572,573,1,0,0,0,573,574,1,0,0,0,574,575,6,76,1,0,575,154,1,0,0,0,
        576,577,5,35,0,0,577,581,5,33,0,0,578,580,3,147,73,0,579,578,1,0,
        0,0,580,583,1,0,0,0,581,579,1,0,0,0,581,582,1,0,0,0,582,584,1,0,
        0,0,583,581,1,0,0,0,584,585,6,77,0,0,585,156,1,0,0,0,35,0,359,365,
        367,375,377,394,398,403,410,415,421,425,431,434,439,443,450,456,
        460,468,471,478,482,486,491,495,500,506,512,525,539,564,572,581,
        2,0,1,0,6,0,0
    ]

class LuaLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    T__47 = 48
    T__48 = 49
    T__49 = 50
    T__50 = 51
    T__51 = 52
    T__52 = 53
    T__53 = 54
    T__54 = 55
    T__55 = 56
    NAME = 57
    NORMALSTRING = 58
    CHARSTRING = 59
    LONGSTRING = 60
    INT = 61
    HEX = 62
    FLOAT = 63
    HEX_FLOAT = 64
    COMMENT = 65
    LINE_COMMENT = 66
    WS = 67
    SHEBANG = 68

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "';'", "'='", "'break'", "'goto'", "'do'", "'end'", "'while'", 
            "'repeat'", "'until'", "'if'", "'then'", "'elseif'", "'else'", 
            "'for'", "','", "'in'", "'function'", "'local'", "'<'", "'>'", 
            "'return'", "'continue'", "'::'", "'.'", "':'", "'nil'", "'false'", 
            "'true'", "'...'", "'('", "')'", "'['", "']'", "'{'", "'}'", 
            "'or'", "'and'", "'<='", "'>='", "'~='", "'=='", "'..'", "'+'", 
            "'-'", "'*'", "'/'", "'%'", "'//'", "'&'", "'|'", "'~'", "'<<'", 
            "'>>'", "'not'", "'#'", "'^'" ]

    symbolicNames = [ "<INVALID>",
            "NAME", "NORMALSTRING", "CHARSTRING", "LONGSTRING", "INT", "HEX", 
            "FLOAT", "HEX_FLOAT", "COMMENT", "LINE_COMMENT", "WS", "SHEBANG" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "T__46", "T__47", "T__48", "T__49", 
                  "T__50", "T__51", "T__52", "T__53", "T__54", "T__55", 
                  "NAME", "NORMALSTRING", "CHARSTRING", "LONGSTRING", "NESTED_STR", 
                  "INT", "HEX", "FLOAT", "HEX_FLOAT", "ExponentPart", "HexExponentPart", 
                  "EscapeSequence", "DecimalEscape", "HexEscape", "UtfEscape", 
                  "Digit", "HexDigit", "SingleLineInputCharacter", "COMMENT", 
                  "LINE_COMMENT", "WS", "SHEBANG" ]

    grammarFileName = "Lua.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


